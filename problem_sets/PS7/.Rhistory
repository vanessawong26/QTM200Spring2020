2+2
#-------------------------------------------------------------------------------
# R can be used to generate numbers
#-------------------------------------------------------------------------------
1:20
x <- c(1,2,3,6,7)
y <- c(1:50)
y^2
z <- y^2
length(z)
print(z)
sum(z)
mean(z)
source("http://www.openintro.org/stat/data/arbuthnot.R")
source("http://www.openintro.org/stat/data/arbuthnot.R")
arbuthnot
View(arbuthnot)
head(arbuthnot)
tail(arbuthnot)
dim(arbuthnot)
yrbss2013 <- read.csv("~/Downloads/yrbss2013.csv", header=FALSE)
View(yrbss2013)
yrbss2013
View(yrbss2013)
view(yrbss2013)
view(yrbss2013)
yrbss2013 <- read.csv("~/Downloads/yrbss2013.csv")
View(yrbss2013)
view(yrbss2013)
str(yrbss2013)
yrbss2013$bmi
yrbss2013$bmi[12]
#integer=whole number
#factor= categoricals
yrbss2013$days_drink > yrbss2013$days_smoke
sum(yrbss2013$days_drink > yrbss2013$days_smoke)
?plot
plot(x = yrbss2013$days_smoke,
y = yrbss2013$weight_kg)
mean(y)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("stringr"),  pkgTest)
# set working directory, import datasets
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS6")
chol <- read.csv("cholesterol.csv")
gdp <- read.csv("gdpChange.csv")
View(chol)
reg1 <- (cholCat ~ sex + fat)
summary(reg1)
reg1 <- (cholCat ~ sex + fat, data=chol)
reg1 <- (cholCat ~ sex + fat data=chol)
reg1 <- lm(cholCat ~ sex + fat data=chol)
reg1 <- lm(cholCat ~ sex + fat, data=chol)
summary(reg1)
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial (link="logit"))
summary(reg_logit)
rlnull <- glm(cholCat ~ 1, family=binomial(link="logit"), data=chol)
View(rlnull)
summary(rlnull)
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial (link="logit"))
rlnull <- glm(cholCat ~ 1, family=binomial(link="logit"), data=chol)
summary(rlnull)
summ(rlnull)
summary(rlnull)
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial(link="logit"))
summary(reg_logit)
rlnull <- glm(cholCat ~ 1, family=binomial(link="logit"), data=chol)
summary(rlnull)
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial(link="logit"))
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("stringr"),  pkgTest)
# set working directory, import datasets
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS6")
chol <- read.csv("cholesterol.csv")
gdp <- read.csv("gdpChange.csv")
#####################
# Problem 1:
#####################
#We are interested in predicting the cholesterol category based on sex and fat intake.
#Fit an additive model. Provide the summary output, the global null hypothesis,
#and p-value. Please describe the results and provide a conclusion.
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial(link="logit"))
summary(reg_logit)
rlnull <- glm(cholCat ~ 1, family=binomial(link="logit"), data=chol)
summary(rlnull)
anova(reg_logit, rlnull)
null2 <- anova(reg_logit, rlnull)
summary(null2)
rlnull <- glm(cholCat ~ 1, data=chol family=binomial(link="logit"))
rlnull <- glm(cholCat ~ 1, data=chol, family=binomial(link="logit"))
summary(rlnull)
anova(lm.reduced, lm.full, test=Chisq)
anova(rlnull, reg_logit, test=Chisq)
anova(rlnull, reg_logit, test="Chisq")
# c
-4.759 + (1.357*0) + (0.066*100)
# c
# B0 + B1X
(-4.759 + (0.066 * 100))
# c
# B0 + B1X
(-4.759 + (0.066 * 100))
# = 1.841
1/(1+exp(-1.841))
# d
reg_logit <- glm(cholCat ~ sex + fat, data=chol, family=binomial(link="logit"))
reg_logit2 <- glm(cholCat ~ sex * fat, data=chol, family=binomial(link="logit"))
anova(reg_logit, reg_logit2, test="Chisq")
View(gdp)
#1
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
#####################
# Problem 2:
#####################
install.packages(nnet)
#####################
# Problem 2:
#####################
install.packages(nnet)
#####################
# Problem 2:
#####################
require(nnet)
#1
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
gdp <- read.csv("gdpChange.csv", stringsAsFactors = F)
#####################
# Problem 2:
#####################
require(nnet)
#1
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
table(GDPWdiff)
table(gdp$GDPWdiff)
GDPWdiff <- relevel(GDPWdiff, ref="no change")
gdp$GDPWdiff <- relevel(GDPWdiff, ref="no change")
gdp$GDPWdiff <- relevel(GDPWdiff, ref="no change", data=gdp)
gdp$GDPWdiff <- relevel(gdp$GDPWdiff, ref="no change")
GDPWdiff2 <- relevel(gdp$GDPWdiff, ref="no change")
#1
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
summary(gdp_reg)
#1
a <- contasts(gdp$GDPWdiff)
#1
(a <- contasts(gdp$GDPWdiff))
#1
a <- contrasts(gdp$GDPWdiff)
#1
gdp$GDPWdiff
#1
table(gdp$GDPWdiff)
gdp$GDPWdiff_ref <- ifelse(GDPWdiff == "no change", 1, 0)
gdp$GDPWdiff_ref <- ifelse(gdp$GDPWdiff == "no change", 1, 0)
table(gdp$GDPWdiff_ref)
gdp$GDPWdiff_ref <- ifelse(gdp$GDPWdiff == "no change", 1, 0, 2)
gdp$GDPWdiff_ref <- ifelse(gdp$GDPWdiff == "no change", 0, 1, 2)
gdp$GDPWdiff_ref <- ifelse(gdp$GDPWdiff == "no change", 0, 1)
table(gdp$GDPWdiff_ref)
summary(gdp_reg)
#1
gdp <- within(gdp, GDPWdiff <- relevel(GDPWdiff, ref="no change"))
#1
gdp <- within(gdp, GDPWdiff <- relevel.default(GDPWdiff, ref="no change"))
#1
gdp_reg <- multinom(GDPWdiff ~ REG + OIL + relevel(GDPWdiff, ref="no change"), data=gdp)
summary(gdp_reg)
# 1
gdp = gdp %>% mutate(GDPWdiff = relevel(GDPWdiff, "no change")
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
summary(gdp_reg)
# 1
gdp$GDPWdiff = relevel(gdp$GDPWdiff, ref="no change")
gdp$GDPWdiff = relevel(gdp$GDPWdiff, ref="no change")
gdp_reg <- multinom(GDPWdiff ~ REG + OIL, data=gdp)
summary(gdp_reg)
# 1
GDPWdiff_new[gdp$GDPWdiff=="no change"] <- 0
# 1
gdp$GDPWdiff_new[gdp$GDPWdiff=="no change"] <- 0
gdp$GDPWdiff_new[gdp$GDPWdiff=="positive"] <- 1
gdp$GDPWdiff_new[gdp$GDPWdiff=="negative"] <- 2
gdp_reg <- multinom(GDPWdiff_new ~ REG + OIL, data=gdp)
summary(gdp_reg)
View(gdp)
exp(coef(gdp_reg)[,c(1:3)])
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp)
# Residual Deviance: 4678.77
# AIC: 4690.77
###############################################################
#> exp(coef(gdp_reg)[,c(1:3)])
#    (Intercept)    REG       OIL
# 1 (+)   93.10789 5.865024  97.15632
# 2 (-)   44.94186 3.972047 119.57794
###############################################################
library(nlme)
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp)
# 2
install.packages(nlme)
# 2
install.packages("nlme")
# 2
install.packages("nlme")
# 2
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp)
# 2
library(MASS)
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp)
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp, Hess=T)
ordered_logit <- polr(GDPWdiff_new ~ REG + OIL, data=gdp, Hess=T)
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp, Hess=T)
summary(ordered_logit)
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp, Hess=T)
summary(ordered_logit)
gdp <- read.csv("gdpChange.csv")
ordered_logit <- polr(GDPWdiff ~ REG + OIL, data=gdp, Hess=T)
summary(ordered_logit)
ordered_logit
exp(0.3984834)
exp(-0.1987177)
exp(-0.7311784)
exp(-0.7104851)
# set working directory, import datasets
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS7")
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("stringr"),  pkgTest)
# set working directory, import datasets
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS7")
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("stringr"),  pkgTest)
# set working directory, import datasets
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS7")
mexico <- read.csv("MexicoMuniData.csv")
#####################
# Problem 1:
#####################
# (a)
p_model <- glm(PAN.visits.06 ~ competitive.district + marginality.06 + PAN.governor.06, data=mexico, family=poisson)
summary(p_model)
exp(coef(p_model))
# (c)
0.0196349 + (0.6316508*1) + (0.8127638*1)
# (c)
0.0196349 - (0.6316508*1) - (0.8127638*1)
# (c)
lambda <- exp(-3.9304 - .4594 - .2073)
lambda
library(lmer)
install.packages(lmer)
#####################
# Problem 2:
#####################
# (1)
library(lmer)
#####################
# Problem 2:
#####################
# (1)
install.packages(lmer)
#####################
# Problem 2:
#####################
# (1)
install.packages("lmer")
library(lmer)
sleepstudy
sleepstudy <- sleepstudy
#####################
# Problem 2:
#####################
# (1)
install.packages("lme4")
library(lme4)
sleepstudy <- sleepstudy
View(sleepstudy)
install.packages("lme4")
library(lme4)
sleepstudy <- sleepstudy
#####################
# Problem 2:
#####################
# (1)
pooled <- lm(Reaction ~ Days)
#####################
# Problem 2:
#####################
# (1)
pooled <- lm(Reaction ~ Days, data=sleepstudy)
summary(pooled)
# model: y = 251.405 + 10.467x
par(mfrow=c(2,2)); plot(model1)
# model: y = 251.405 + 10.467x
par(mfrow=c(2,2))
# model: y = 251.405 + 10.467x
par(mfrow=c(2,2))
# model: y = 251.405 + 10.467x
par(mfrow=c(2,2)); plot(pooled)
plot(pooled, which=1)
# model: y = 251.405 + 10.467x
par(mfrow=c(2,2)); plot(pooled)
View(sleepstudy)
# (2)
unpooled <- lm(Reaction ~ Days + factor(Subject), data=sleepstudy)
summary(unpooled)
# (2)
unpooled <- lm(Reaction ~ Days + factor(Subject)-1, data=sleepstudy)
summary(unpooled)
unpooled2 <- lm(Reaction ~ Days:factor(Subject)-1, data=sleepstudy)
summary(unpooled2)
summary(unpooled)
unpooled <- lm(Reaction ~ Days + factor(Subject)-1, data=sleepstudy)
summary(unpooled)
# (2)
unpooled <- lm(Reaction ~ Days + factor(Subject)-1, data=sleepstudy)
summary(unpooled)
# (4)
unpooled3 <- lm(Reaction ~ Days + Subject + Days:factor(Subject)-1, data=sleepstudy)
summary(unpooled2)
# (4)
unpooled3 <- lm(Reaction ~ Days + Subject + Days:Subject, data=sleepstudy)
summary(unpooled2)
# (4)
unpooled3 <- lm(Reaction ~ Days + factor(Subject)-1 + Days:factor(Subject)-1, data=sleepstudy)
summary(unpooled3)
semipool <- lmerControl(Reaction ~ Days + (1 + Days|Subject), data=sleepstudy)
semipool <- lmer(Reaction ~ Days + (1 + Days|Subject), data=sleepstudy)
summary(semipool)
fitted(semipool)
semi <- fitted(semipool)
plot(semi)
plot(sleepstudy$days, semi)
plot(sleepstudy$days, fitted(semipool)
plot(sleepstudy$days, fitted(semipool))
plot(sleepstudy$days,fitted(semipool))
plot(sleepstudy$days,fitted(semipool))
plot(semipool)
plot(pooled)
