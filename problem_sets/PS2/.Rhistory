alphawomen <- ymean - (betawomen*xmean)
alphawomen
# alpha = 0.3029
# linear model: y = 0.3029 + 0.00182x
womenreg <- lm(water~reserved, data=women)
sd_estimate <- sqrt(sum(resid(womenreg)^2)/(dim(women)[1]-2))
sd_estimate
sigma(womenreg)
beta_se <- sd_estimate/sqrt(sum((xxsq)))
betapval <- 2*pt((betawomen-0)/beta_se, dim(women)[1]-2, lower.tail=F)
betapval
summary(womenreg)
#Run bivariate regression
r <- (cov(women$water, women$reserved))/(sd(women$reserved)*sd(women$water))
r
ymean <- mean(women$water)
xmean <- mean(women$reserved)
ysum <- sum(women$water)
xsum <- sum(women$reserved)
yy <- (women$water) - (ymean)
xx <- (women$reserved) - (xmean)
yyxxsum <- sum(yy*xx)
yyxxsum
xxsq <- xx^2
sumxxsq <- sum(xxsq)
betawomen <- yyxxsum/sumxxsq
betawomen
betawomen
# beta = 0.00182
alphawomen <- ymean - (betawomen*xmean)
alphawomen
# alpha = 0.3029
# linear model: y = 0.3029 + 0.00182x
womenreg <- lm(water~reserved, data=women)
# alpha = 0.3029
# linear model: y = 0.3029 + 0.00182x
womenreg <- lm(water~reserved, data=women)
womenreg
plot(women$water, women$reserved)
plot(women$water, women$reserved)
plot(women$reserved, women$water)
# alpha = 14.738
# linear model: y = 14.378 + 9.252x
womenreg <- lm(water~reserved, data=women)
womenreg
sd_estimate <- sqrt(sum(resid(womenreg)^2)/(dim(women)[1]-2))
sd_estimate
sigma(womenreg)
beta_se <- sd_estimate/sqrt(sum((xxsq)))
betapval <- 2*pt((betawomen-0)/beta_se, dim(women)[1]-2, lower.tail=F)
betapval
summary(womenreg)
summary(womenreg)
2*pt(fly_teststat, n_fly-2, lower.tail=F)
#Test for a significant linear relationship between thorax and lifespan
n_fly <- dim(fly)[1]
fly_teststat<- (r2*sqrt(n_fly-2))/sqrt(1-(r2)^2)
2*pt(fly_teststat, n_fly-2, lower.tail=F)
#####################
# Problem 3
#####################
#Set wd and load fruitfly dataset
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS2") #copy/paste from getwd
getwd() #double check
library(readr)
fly <- read.csv("fruitfly.csv")
summary(fly)
hist(fly$thorax)
#The distribution of overall fruitfly thorax appears to be bimodal and approximately normal.
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
#There appears to be a linear relationship between fruitfly thorax and lifespan length.
#r of thorax vs. lifespan
r2 <- (cov(fly$thorax, fly$lifespan))/(sd(fly$thorax)*sd(fly$lifespan))
r2
#r= 0.636. There is a moderate positive correlation between fruitfly thorax length and fruitfly lifespan.
#Regress thorax on lifespan. Interpret the slope of the fitted model.
mean_y <- mean(fly$lifespan) #y-bar = 57.44
mean_y
mean_x <- mean(fly$thorax) #x-bar = 0.821
sigmalifespan_y <- sum(fly$lifespan) # = 7180
sigmalifespan_y
sigmathorax_x <- sum(fly$thorax) # = 102.62
sigmathorax_x
yybar <- (fly$lifespan-mean_y)
xxbar <- (fly$thorax-mean_x)
xxyy <- (xxbar*yybar)
xxyy
sum(xxyy) # = 107.367
sqxxbar <- (xxbar)^2
sqxxbar2 <- sum(sqxxbar)
sqxxbar2 # = 0.744
beta <- (sum(xxyy))/sqxxbar2
beta # = 144.33
alpha <- mean_y - (beta*mean_x)
alpha # = -61.0517
lm(fly$lifespan ~ fly$thorax, data=fly)
#linear model: y = -61.05 + 144.33x
#Interpretation of beta/slope: For every one mm increase in fruitfly thorax length, there is a 144.33 day increase in fruitfly lifespan.
#Test for a significant linear relationship between thorax and lifespan
n_fly <- dim(fly)[1]
fly_teststat<- (r2*sqrt(n_fly-2))/sqrt(1-(r2)^2)
2*pt(fly_teststat, n_fly-2, lower.tail=F)
#p-value = ~ 0
cor.test(fly$lifespan, fly$thorax)
# p ~ 0 , therefore there is a statistically reliable relationship between fruitfly thorax and lifespan length. This (p-value) does not mean there is a strong linear relationship between the two variables.
#90% CI for slope
#Calc critical value
a <- (1-(90/100))
critprob <- 1 - (a/2) # = 0.95
df <- n_fly - 2 # = 123
#critical value = 1.645
critvalue <- 1.645
mod = lm(fly$lifespan ~ fly$thorax, data=fly)
summary(mod)
#standard error = 15.77
moe2 <- critvalue*15.77
lower_90b <- beta - moe2
upper_90b <- beta + moe2
ci90b <- c(lower_90b, upper_90b)
ci90b
# 90% confidence interval is (118.3915, 170.2748)
confintfunc <- lm(lifespan ~thorax, data=fly)
confint(confintfunc, level=0.90)
# 90% confidence interval is the same: (118, 170). 0 is not within the interval, supporting the conclusion from the previous quesiton that there is a statistically reliable relationship between fruitfly lifespan and thorax length.
#Prediction of (average) lifespan (y) when thorax length (x) = 0.8
new_fly <- data.frame(thorax=0.8)
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction", level=0.90)
predicintervals
confintervals <- predict(confintfunc, newdata=new_fly, interval="confidence", level=0.90)
confintervals
summary(fly$thorax)
newx <- seq(0.640,0.940, by=0.5)
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
lines(newx, predicintervals[,2], col="orange", lty=2)
lines(newx, predicintervals[,3], col="orange", lty=2)
confintfunc
predict(confintfunc, interval = "confidence")
#Prediction interval for (average?) lifespan when thorax length is 0.8mm = (31.77, 77.05)
#Expected value (lifespan) when thorax length is 0.8mm = 54.415 days
#Questions:
#Q2: can binary variables be used for bivariate regression? It seems like we need to use
#the female variable to address the researchers' hyoptheses
#Q3: running predict function --> matrix, not a specific expected value or prediction interval
#Q3: difference between predicting average value vs value for an individual?
#
#
#
#
#
#Test for a significant linear relationship between thorax and lifespan
n_fly <- dim(fly)[1]
fly_teststat<- (r2*sqrt(n_fly-2))/sqrt(1-(r2)^2)
2*pt(fly_teststat, n_fly-2, lower.tail=F)
#p-value = ~ 0
cor.test(fly$lifespan, fly$thorax)
predicintervals
predicintervals
confintervals
# The predicted range for the average lifepsan of fruitflies when thorax length = 0.8 is 52.325 to 56.504 days. The point estimate/expected value is 54.414 days.
summary(fly$thorax)
newx <- seq(0.640,0.940, by=0.5)
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
lines(newx, predicintervals[,2], col="orange", lty=2)
lines(newx, predicintervals[,3], col="orange", lty=2)
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)", lines(newx, predicintervals[,2], col="orange", lty=2)
predict(confintfunc, interval = "confidence")
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction")
predicintervals
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction", level=0.90)
predicintervals
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction", level=0.95)
predicintervals
# The predicted range for an individual fruitfly's lifespan when thorax length = 0.8 is 27.375 to 81.454 days. The point estimate/expected value is 54.414 days.
confintervals <- predict(confintfunc, newdata=new_fly, interval="confidence", level=0.95)
confintervals
# The predicted range for the average lifepsan of fruitflies when thorax length = 0.8 is 51.919 to 56.910 days. The point estimate/expected value is 54.414 days.
summary(fly$thorax)
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction")
predicintervals
predicintervals <- predict(confintfunc, newdata=new_fly, interval="prediction", level=0.95)
predicintervals
newx <- seq(0.640,0.940, by=0.5)
confintfunc
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
lines(newx, predicintervals[,2], col="orange", lty=2)
lines(newx, predicintervals[,3], col="orange", lty=2)
confseq <- predict(confintfunc, interval = "confidence")
predicseq <- predict(confintfunc, interval="prediction")
# 90% confidence interval is (118.3915, 170.2748)
confintfunc <- lm(lifespan ~ thorax, data=fly)
predicseq <- predict(confintfunc, interval="prediction")
confseq <- predict(confintfunc, interval = "confidence")
confseq
predicseq <- predict(confintfunc, interval="prediction")
predicseq <- predict(confintfunc, interval = "prediction")
predicseq <- predict(confintfunc, interval = "prediction")
predicseq <- predict(confintfunc, interval = c("prediction"))
predicseq <- predict(confintfunc, interval = "prediction")[1:125]
confseq <- predict(confintfunc, interval = "confidence")[1:125]
confseq
confseq <- predict(confintfunc, interval = "confidence")
confseq
cbind(fly$lifespan, predict(fly, interval="prediction"))
cbind(fly$lifespan, predict(fly, interval="prediction"))[1:125,]
predicseq <- predict(confintfunc, interval = "prediction")[1:125]
cbind(fly$lifespan, predict(fly, interval="prediction"))[1:125,]
cbind(fly$lifespan, predict(fly, interval="prediction"))[1:125]
confseq <- predict(confintfunc, newdata=fly, interval = "confidence")
confseq
predicseq <- predict(confintfunc, newdata=fly, interval = "prediction")
predicseq
matlines(temp, conseq[,c("lwr","upr")], col="red")
matlines(thorax, conseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, conseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
pline <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
cline <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
pline <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
cline <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
plot(pline, cline)
fitline <- matlines(fly$thorax, confseq[fit]), col="black")
fitline <- matlines(fly$thorax, confseq["fit]"), col="black")
fitline <- matlines(fly$thorax, confseq["fit]", col="black")
fitline <- matlines(fly$thorax, confseq["fit"], col="black")
fitted.values(confseq)
pline <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
cline <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
plot(predicseq["fit"],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
predicseq["fit"]
plot(fitted.values[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
fitted.values= predicseq[1:125]
fit <- fitted.values= predicseq[1:125]
plot(fitted.values[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
plot(fitted.values[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
plot(fitted.values[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
plot(fly$thorax[1:125], fly$lifespan[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
lines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=2)
plot(
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=2)
plot(fitted,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
plot(fitted[1:125],
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
plot(fly$thorax, fly$lifespan
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=2)
fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
Confidence <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
Prediction <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
Fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
legend(x=0, y=-20, c(Confidence, Prediction, Fitted))
legend(x=2, y=-20, c(Confidence, Prediction, Fitted))
legend(x=0, y=-20, c(Confidence, Prediction, Fitted), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
legend(x=5, y=-20, c(Confidence, Prediction, Fitted), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
legend(x=0, y=-20, c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
Confidence <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
Prediction <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
Fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
legend(x=0, y=-20, c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
Confidence <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
Prediction <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
Fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
legend(x=0, y=-20, c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
legend(x=0, y=0, c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
legend(x=0, y=0, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), pch=c(1:3))
legend(x=0, y=0, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"))
legend(x=0.65, y=80, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"))
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"))
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"))
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), lty=1:3)
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), lty=1)
#Calculating p-value
#df = (3-1)(2-1) = 2
pchisq(teststat, df=2, lower.tail=FALSE)
teststat <- sum(unsummedchisq)
teststat
copbribe <- matrix(c(14, 6, 7, 7, 7, 1), nrow=2, byrow=T)
copbribe
grandtotal <- sum(copbribe)
grandtotal
upperclassrowsum <- sum(copbribe[1,])
upperclassrowsum
lowerclassrowsum <- sum(copbribe[2,])
lowerclassrowsum
notstoppedcsum <- sum(copbribe[,1])
briberequestedcsum <- sum(copbribe[,2])
warningcsum <- sum(copbribe[,3])
e14 <- ((upperclassrowsum*notstoppedcsum)/grandtotal)
e6 <- ((upperclassrowsum*briberequestedcsum)/grandtotal)
e7a <- ((upperclassrowsum*warningcsum)/grandtotal)
e7b <- ((lowerclassrowsum*notstoppedcsum)/grandtotal)
e7c <- ((lowerclassrowsum*briberequestedcsum)/grandtotal)
e1 <- ((lowerclassrowsum*warningcsum)/grandtotal)
copbribeexpected <- matrix(c(e14, e6, e7a,e7b, e7c,e1), nrow=2, byrow=T)
copbribeexpected
unsummedchisq <- ((copbribe-copbribeexpected)^2)/copbribeexpected
unsummedchisq
teststat <- sum(unsummedchisq)
teststat
#chi-squared test statistic is 3.791168
#Calculating p-value
#df = (3-1)(2-1) = 2
pchisq(teststat, df=2, lower.tail=FALSE)
r_unsquared <- (copbribe-copbribeexpected)
r_unsquared
upperrowprop <- (1-(upperclassrowsum/grandtotal))
lowerrowprop <- (1-(lowerclassrowsum/grandtotal))
notstoppedcprop <- (1-(notstoppedcsum/grandtotal))
bribecprop <- (1-(briberequestedcsum)/grandtotal)
warningcprop <- (1-(warningcsum/grandtotal))
sr_e14 <- r_unsquared[1,1]/sqrt(e14*upperrowprop*notstoppedcprop)
sr_e6 <- r_unsquared[1,2]/sqrt(e6*upperrowprop*bribecprop)
r_unsquared[1,2]
sr_e7a <- r_unsquared[1,3]/sqrt(e7a*upperrowprop*warningcprop)
sr_e7b <- r_unsquared[2,1]/sqrt(e7b*lowerrowprop*notstoppedcprop)
sr_e7c <- r_unsquared[2,2]/sqrt(e7c*lowerrowprop*bribecprop)
sr_e1 <- r_unsquared[2,3]/sqrt(e1*lowerrowprop*warningcprop)
stan_resid <- matrix(c(sr_e14, sr_e6, sr_e7a, sr_e7b, sr_e7c, sr_e1), nrow=2, byrow=T)
stan_resid
summary(fly)
hist(fly$thorax)
hist(fly$lifespan)
summary(fly$lifespan)
hist(fly$lifespan)
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", title="Fruitfly lifespan (days) vs. thorax length (mm)")
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
hist(fly$lifespan)
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)")
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="Fruitfly thorax length (mm)", ylab="Fruitfly lifespan (days)")
#Plot thorax vs. lifespan
plot(fly$thorax, fly$lifespan,
xlab="Fruitfly thorax length (mm)", ylab="Fruitfly lifespan (days)")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax (mm)")
Confidence <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
Prediction <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
Fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), lty=1)
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax length (mm)")
plot(fly$thorax, fly$lifespan,
xlab="thorax length (mm)", ylab="lifespan (days)", main="Fruitfly lifespan (days) vs. thorax length (mm)")
Confidence <- matlines(fly$thorax, confseq[,c("lwr","upr")], col="red")
Prediction <- matlines(fly$thorax, predicseq[,c("lwr","upr")], col="blue")
fitted.values = predicseq[1:125]
Fitted <- lines(fly$thorax[1:125], fitted.values[1:125], col="orange", lwd=1)
legend(x=0.64, y=100, legend=c("Confidence", "Prediction", "Fitted"), cex=0.6, col=c("red", "blue", "orange"), lty=1)
# load dataset from Faraway package
data(sat)
#####################################################
## File: Lab10.R                                   ##
## Multiple Regression in R                        ##
#####################################################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
# Jeff wd
setwd('~/Dropbox/Emory/projects/textAttentionCheck/')
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
lapply(c("faraway"), pkgTest)
#######################
# Multiple Regression
#######################
# load dataset from Faraway package
data(sat)
?sat
# Estimate the effect of "expend" on "takers"
# using a 95% level of significance
sat1 <- lm(takers ~ expend, data=sat)
summary(sat1)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
summary(sat2)
# How do you interpret the coefficient for salary?
# What if we include all the variables in the data?
sat3 <- lm(takers ~ ., data=sat)
summary(sat3)
# total is NA because it is verbal + math
# Some studies show that politically irrelevant events, such as
# sports events and shark attacks, affect voters' retrospective
# evaluation of government performance. For example, Busby et al.
# (2017) find that the outcome of a college football game affects
# presidental job approval among students.
load("Busby_Football.RData")
colnames(x)
# Experimental setting: Busby et al. (2017) randomly assigned students
# from Ohio State University (OSU) and University of Oregon (UO) to
# answer a survey before and after the 2015 College Football Playoff
# National Championship game. OSU won the game 42-20, and thus, OSU is
# the "winning school" and UO is the "losing school." They find that among
# OSU students, presidential approval was higher for those who answered
# the survey after the game than those who answered the survey before the
# game. By contast, among UO students, presidential approval was lower for
# those who answered the survey after the game than those who answered the
# survey before the game. t-tests below confirm their findings.
# papprove: presidential approval
# Post: 0 = pre-game survey vs 1 = post-game survey
# osu: 0 = UO (losing) vs 1 = OSU (winning)
# Comparison of OSU students before and after the game
t.test(papprove ~ Post, data=x[x$osu==1,])
# Comparison of UO students before and after the game
t.test(papprove ~ Post, data=x[x$osu==0,])
# Source: Besby, Ethan C, James N. Druckman, and Alexandria Fredendall,
# 2017, "The Political Relevance of Irrelevant Events," Journal of
# Politics 79(1).
# 2. Run a linear model with papprove as a dependent variable and
#    Post, osu, and the interaction of the two as independent variables.
# 3. Answer the following questions based on the results.
# 3a. What is the predicted presidential approval of OSU students who received
#     the survey BEFORE the game?
# 3b. What is the predicted presidential approval of OSU students who received
#     the survey AFTER the game?
# 3c. What is the predicted presidential approval of UO students who received
#     the survey BEFORE the game?
# 3d. What is the predicted presidential approval of UO students who received
#     the survey AFTER the game?
# 3e. What is the marginal effect of Post on presidential approval
#     when osu=1?
################ Additional Question ################
# 4. The dataset includes a lot of variables about student characteristics,
#    like age and gender. Add some of these variables to the model above and
#    re-run a regression. Does the inclusion of these controls attenuate their
#    findings? Why or why not?
# Estimate the effect of "expend" on "takers"
# using a 95% level of significance
sat1 <- lm(takers ~ expend, data=sat)
summary(sat1)
confint(takers ~ expend, data=sat, level=0.95)
confint(takers ~ expend, data=sat1, level=0.95)
confint(sat1, level=0.95)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
summary(sat2)
summary(sat1)
summary(sat2)
# What if we control for other factors?
sat2 <- lm(takers ~ expend + ratio + salary, data=sat)
summary(sat2)
sat2
